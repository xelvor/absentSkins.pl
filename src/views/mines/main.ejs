<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="../assets/styles/steam-login-modal.css">
    <link rel="stylesheet" href="../assets/styles/header.css">
    <link rel="stylesheet" href="../assets/styles/payments.css">
    <link rel="stylesheet" href="../assets/styles/scrollbar.css">
    <link rel="stylesheet" href="../assets/styles/exchange.css">
    <link rel="stylesheet" href="../assets/styles/mines.css">
    <script src="../assets/scripts/steam.js"></script>
    <script src="../assets/scripts/odometer.js"></script>
    <script
    src="https://cdnjs.cloudflare.com/ajax/libs/odometer.js/0.4.7/odometer.min.js"
    integrity="sha512-v3fZyWIk7kh9yGNQZf1SnSjIxjAKsYbg6UQ+B+QxAZqJQLrN3jMjrdNwcxV6tis6S0s1xyVDZrDz9UoRLfRpWw=="
    crossorigin="anonymous"
    referrerpolicy="no-referrer"
    ></script>
    <link
    rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/odometer.js/0.4.7/themes/odometer-theme-default.css"
    integrity="sha512-kMPqFnKueEwgQFzXLEEl671aHhQqrZLS5IP3HzqdfozaST/EgU+/wkM07JCmXFAt9GO810I//8DBonsJUzGQsQ=="
    crossorigin="anonymous"
    referrerpolicy="no-referrer"
    />
    
</head>
<body>
    <header>
        <div class="header-left-side">
            <img class="header-logo" src="../assets/logo.png" alt="">
        </div>
        <div class="header-center">
            <div class="header-page-container" onclick="window.location.href = '/'">
                <img src="./assets/page.png" alt="" class="header-page">
                <div class="header-text">Home</div>
            </div>
            <div class="header-page-container" onclick="window.location.href = '/exchanger'">
                <img src="./assets/page.png" alt="" class="header-page">
                <div class="header-text">Exchanger</div>
            </div>
            <div class="header-page-container-active" onclick="window.location.href = '/mines'">
                <img src="./assets/page-active.png" alt="" class="header-page">
                <div class="header-text-active">Mines</div>
            </div>
        </div>
        <div class="header-right-side">
            <% if (req.session.logged) { %>
                <div class="user-header">
                    <img class="header-avatar" src="<%= req.session.avatar %>" alt="">
                    <div class="header-user-info">
                        <div class="header-username">@<%= req.session.username %></div>
                        <div class="header-user-money"><%= req.session.money %></div>
                    </div>
                </div>
                <button class="header-settings">
                    <svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="gear" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" width="25px" height="25px" class="button_icon svg-inline--fa fa-gear"><path fill="#ffffff" d="M495.9 166.6c3.2 8.7 .5 18.4-6.4 24.6l-43.3 39.4c1.1 8.3 1.7 16.8 1.7 25.4s-.6 17.1-1.7 25.4l43.3 39.4c6.9 6.2 9.6 15.9 6.4 24.6c-4.4 11.9-9.7 23.3-15.8 34.3l-4.7 8.1c-6.6 11-14 21.4-22.1 31.2c-5.9 7.2-15.7 9.6-24.5 6.8l-55.7-17.7c-13.4 10.3-28.2 18.9-44 25.4l-12.5 57.1c-2 9.1-9 16.3-18.2 17.8c-13.8 2.3-28 3.5-42.5 3.5s-28.7-1.2-42.5-3.5c-9.2-1.5-16.2-8.7-18.2-17.8l-12.5-57.1c-15.8-6.5-30.6-15.1-44-25.4L83.1 425.9c-8.8 2.8-18.6 .3-24.5-6.8c-8.1-9.8-15.5-20.2-22.1-31.2l-4.7-8.1c-6.1-11-11.4-22.4-15.8-34.3c-3.2-8.7-.5-18.4 6.4-24.6l43.3-39.4C64.6 273.1 64 264.6 64 256s.6-17.1 1.7-25.4L22.4 191.2c-6.9-6.2-9.6-15.9-6.4-24.6c4.4-11.9 9.7-23.3 15.8-34.3l4.7-8.1c6.6-11 14-21.4 22.1-31.2c5.9-7.2 15.7-9.6 24.5-6.8l55.7 17.7c13.4-10.3 28.2-18.9 44-25.4l12.5-57.1c2-9.1 9-16.3 18.2-17.8C227.3 1.2 241.5 0 256 0s28.7 1.2 42.5 3.5c9.2 1.5 16.2 8.7 18.2 17.8l12.5 57.1c15.8 6.5 30.6 15.1 44 25.4l55.7-17.7c8.8-2.8 18.6-.3 24.5 6.8c8.1 9.8 15.5 20.2 22.1 31.2l4.7 8.1c6.1 11 11.4 22.4 15.8 34.3zM256 336a80 80 0 1 0 0-160 80 80 0 1 0 0 160z" class=""></path></svg>
                </button>
            <% } else { %>
                <button onclick="loginWithSteam()" class="button-login-steam"><svg aria-hidden="true" focusable="false" data-prefix="fab" data-icon="steam-symbol" width="20px" height="20px"role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" class="LoginButton_icon svg-inline--fa fa-steam-symbol"><path fill="#ffffff" d="M395.5 177.5c0 33.8-27.5 61-61 61-33.8 0-61-27.3-61-61s27.3-61 61-61c33.5 0 61 27.2 61 61zm52.5.2c0 63-51 113.8-113.7 113.8L225 371.3c-4 43-40.5 76.8-84.5 76.8-40.5 0-74.7-28.8-83-67L0 358V250.7L97.2 290c15.1-9.2 32.2-13.3 52-11.5l71-101.7c.5-62.3 51.5-112.8 114-112.8C397 64 448 115 448 177.7zM203 363c0-34.7-27.8-62.5-62.5-62.5-4.5 0-9 .5-13.5 1.5l26 10.5c25.5 10.2 38 39 27.7 64.5-10.2 25.5-39.2 38-64.7 27.5-10.2-4-20.5-8.3-30.7-12.2 10.5 19.7 31.2 33.2 55.2 33.2 34.7 0 62.5-27.8 62.5-62.5zm207.5-185.3c0-42-34.3-76.2-76.2-76.2-42.3 0-76.5 34.2-76.5 76.2 0 42.2 34.3 76.2 76.5 76.2 41.9.1 76.2-33.9 76.2-76.2z" class=""></path></svg> Zaloguj przez Steam</button>
            <% } %>
        </div>
    </header>
    <div class="container">
        <div class="mines-box">
            <div class="mines-container">
                <div class="mines-fields">
                    <% for (let i = 0; i < 25; i++) { %>
                        <button class="mines-field" id="mine<%= i %>" onclick="selectMine(<%= i %>)"></button>
                    <% } %>
                </div>
            </div>
            <div class="mines-right-side">
                <span class="big-text-mines">MINY</span>
                <div class="mines-input">
                    <img class="mines-input-left-side" src="https://absentskins.pl/assets/dollar-circle.png" alt="">
                    <input class="mines-input-editbox" type="number" value="0" id="betAmount" placeholder="Wpisz wartosc zakladu">
                    <div class="mines-input-right-side">
                        <button class="mines-button-first">1/2</button>
                        <button class="mines-button-center">X2</button>
                        <button class="mines-button-end">MAX</button>
                    </div>
                </div>
                <select class="select-menu-mines" name="sort" id="sort">
                    <option value="1">1</option>
                    <option value="2">2</option>
                    <option value="3">3</option>
                    <option value="4">4</option>
                    <option value="5">5</option>
                    <option value="6">6</option>
                    <option value="7">7</option>
                    <option value="8">8</option>
                    <option value="9">9</option>
                    <option value="10">10</option>
                    <option value="11">11</option>
                    <option value="12">12</option>
                    <option value="13">13</option>
                    <option value="14">14</option>
                    <option value="15">15</option>
                    <option value="16">16</option>
                    <option value="17">17</option>
                    <option value="18">18</option>
                    <option value="19">19</option>
                    <option value="20">20</option>
                    <option value="21">21</option>
                    <option value="22">22</option>
                </select>
                <button disabled="true" class="select-random-mines"><img class="select-random-mines-icon" src="https://absentskins.pl/assets/mines-select-random.png"> Wybierz losowo</button>
                <button class="action-button-mines" onclick="startGame()"> <div class="cashout-info">1,345 PLN</div>Zacznij gre</button>
            </div>
        </div>
    </div>
</body>
</html>

<script>
    function addCommas(nStr) {
        nStr += '';
        x = nStr.split('.');
        x1 = x[0];
        x2 = x.length > 1 ? '.' + x[1] : '';
        var rgx = /(\d+)(\d{3})/;
        while (rgx.test(x1)) {
            x1 = x1.replace(rgx, '$1' + ',' + '$2');
        }
        return x1 + x2;
    }

    let money = 0;

    const webSocket = new WebSocket('ws://localhost:8080');

    webSocket.onopen = () => {
        console.log('Connected')

        webSocket.send(JSON.stringify({
            type: 'minesConnect',
            userID: '<%= req.session.steamid %>'
        }))
    }

    webSocket.onmessage = (message) => {
        const data = JSON.parse(message.data)

        if (data.type == 'minesStart') {
            iziToast.success({
                title: 'Sukces',
                message: 'Gra zostala rozpoczeta',
                position: 'bottomRight'
            })

            const selectRandomMines = document.querySelector('.select-random-mines')
            selectRandomMines.disabled = false

            const buttonStart = document.querySelector('.action-button-mines')
            buttonStart.innerHTML = 'Cashout'

            const minesHTML = document.querySelectorAll('.mines-field')
            minesHTML.forEach(mine => {
                mine.style.backgroundColor = '#2F2F2F'
                mine.classList.remove('selected')
                mine.classList.remove('mine-selected')
                mine.style.opacity = 1
                mine.innerHTML = ''
            })
        } else if (data.type == 'minesError') {
            iziToast.error({
                title: 'Blad',
                message: data.message,
                position: 'bottomRight'
            })
        } else if (data.type == 'minesConnect') {
            iziToast.success({
                title: 'Sukces',
                message: 'Wczytano dane ostatniej gry',
                position: 'bottomRight'
            })

            const input = document.getElementById('betAmount')
            input.value = data.bet

            const selectRandomMines = document.querySelector('.select-random-mines')
            selectRandomMines.disabled = false

            const buttonStart = document.querySelector('.action-button-mines')
            buttonStart.innerHTML = 'Cashout'

            const selectedMines = data.selectedFields

            selectedMines.forEach(mine => {
                mine = mine.replace(/\s/g, '')
                const element = document.getElementById(`mine${mine}`)

                if (element) {
                    element.style.backgroundColor = '#4E6852'
                    element.classList.add('selected')

                    const image = document.createElement('img')
                    image.src = 'https://www.absentskins.pl/assets/diamond.png'
                    image.classList.add('mines-image')
                    image.style.opacity = 0
                    image.style.transition = 'opacity 0.3s'
                    setTimeout(() => {
                        image.style.opacity = 1
                    }, 100)

                    element.appendChild(image)
                }
            })
        } else if (data.type == 'minesSelect') {
            if (data.result == 'empty') {
                // const cashoutInfo = document.querySelector('.cashout-info')
                // cashoutInfo.style.display = 'flex'
                // cashoutInfo.style.opacity = 1
                // cashoutInfo.innerHTML = `${addCommas(data.cashout)} PLN`;

                const buttonStart = document.querySelector('.action-button-mines')
                buttonStart.innerHTML = `WYPLAC (x${data.cashoutMultiplier})`

                const element = document.getElementById(`mine${data.field}`)
                element.classList.remove('animated')
                element.style.backgroundColor = '#4E6852'
                element.classList.add('selected')

                const image = document.createElement('img')
                image.src = 'https://www.absentskins.pl/assets/diamond.png'
                image.classList.add('mines-image')
                image.style.opacity = 0
                image.style.transition = 'opacity 0.3s'
                setTimeout(() => {
                    image.style.opacity = 1
                }, 100)

                element.appendChild(image)
            } else if (data.result == 'selected') {
                return
            } else if (data.result == 'mine') {
                const element = document.getElementById(`mine${data.field}`)
                element.classList.remove('animated')
                element.style.backgroundColor = '#DC4C4C60'
                element.classList.add('mine-selected')

                const image = document.createElement('img')
                image.src = 'https://www.absentskins.pl/assets/bomb.png'
                image.classList.add('mines-image')
                image.style.opacity = 0
                image.style.transition = 'opacity 0.3s'
                setTimeout(() => {
                    image.style.opacity = 1
                }, 100)

                element.appendChild(image)

                iziToast.error({
                    title: 'Przegrales',
                    message: 'Wylosowales mine',
                    position: 'bottomRight'
                })

                const actionButton = document.querySelector('.action-button-mines')
                actionButton.innerHTML = 'Zacznij gre'

                const mines = data.mines
                mines.forEach(mine => {
                if (!document.getElementById(`mine${mine}`).classList.contains('mine-selected')) {
                        const element = document.getElementById(`mine${mine}`)
                        element.style.backgroundColor = '#D8979765'
                        const image = document.createElement('img')
                        image.src = 'https://www.absentskins.pl/assets/bomb.png'
                        image.classList.add('mines-image')
                        image.style.opacity = 0
                        image.style.transition = 'opacity 0.3s'
                        setTimeout(() => {
                            image.style.opacity = 1
                            image.style.scale = 0.8
                        }, 100)
                        element.appendChild(image)
                    }
                })

                for (let i = 0; i < 25; i++) {
                    const insMine = mines.find(mine => mine == i)
                    if (!insMine && !document.getElementById(`mine${i}`).classList.contains('selected')) {
                        const element = document.getElementById(`mine${i}`)
                        element.style.backgroundColor = '#4E6852'
                        element.classList.add('selected')
                        const image = document.createElement('img')
                        image.src = 'https://www.absentskins.pl/assets/diamond.png'
                        image.classList.add('mines-image')
                        image.style.opacity = 0
                        image.style.transition = 'opacity 0.3s'
                        setTimeout(() => {
                            image.style.opacity = 0.6
                            element.style.opacity = 0.6
                            image.style.scale = 0.8
                        }, 100)
                        element.appendChild(image)
                    }
                }
            }
        } else if (data.type == 'minesCashout') {
            iziToast.success({
                title: 'Sukces',
                message: `Wygrales ${addCommas(data.cashout)} PLN`,
                position: 'bottomRight'
            })

            const actionButton = document.querySelector('.action-button-mines')
            actionButton.innerHTML = 'Zacznij gre'

            const minesHTML = document.querySelectorAll('.mines-field')
            minesHTML.forEach(mine => {
                mine.style.backgroundColor = '#2F2F2F'
                mine.classList.remove('selected')
                mine.classList.remove('mine-selected')
                mine.style.opacity = 1
                mine.innerHTML = ''
            })
        }
    }

    webSocket.onclose = () => {
        console.log('Disconnected')
    }

    function startGame() {
        const button = document.querySelector('.action-button-mines')
        if (button.innerHTML.includes('WYPLAC')) {
            webSocket.send(JSON.stringify({
                type: 'minesCashout',
                userID: '<%= req.session.steamid %>'
            }))
            return
        } else {
            const betAmount = document.getElementById('betAmount').value
            const sort = document.getElementById('sort').value

            webSocket.send(JSON.stringify({
                type: 'minesStart',
                userID: '<%= req.session.steamid %>',
                bet: betAmount,
                mines: sort
            }))
        }
    }

    function selectMine(mine) {
        const mn = document.getElementById(`mine${mine}`)
        if (mn.classList.contains('selected')) {
            return
        }

        mn.classList.add('animated')
        mn.classList.add('selected')

        webSocket.send(JSON.stringify({
            type: 'minesSelect',
            userID: '<%= req.session.steamid %>',
            field: mine
        }))
    }

    addEventListener('load', () => {
        const eventSource = new EventSource('http://localhost:8080/money/update-money');
    
        eventSource.onmessage = function (event) {
            const data = JSON.parse(event.data);
            const mn = document.querySelector('.header-user-money');
            createOdometer(mn, data.money);
            money = data.money;
        }
    })

    const minesButtonFirst = document.querySelector('.mines-button-first')
    const minesButtonCenter = document.querySelector('.mines-button-center')
    const minesButtonEnd = document.querySelector('.mines-button-end')

    minesButtonFirst.addEventListener('click', () => {
        const betAmount = document.getElementById('betAmount')
        betAmount.value = Math.floor(betAmount.value / 2)
    })

    minesButtonCenter.addEventListener('click', () => {
        const betAmount = document.getElementById('betAmount')
        betAmount.value = betAmount.value * 2
    })

    minesButtonEnd.addEventListener('click', () => {
        const betAmount = document.getElementById('betAmount')
        betAmount.value = money
    })

    const selectRandomMines = document.querySelector('.select-random-mines')

    selectRandomMines.addEventListener('click', () => {
        webSocket.send(JSON.stringify({
            type: 'minesRandom',
            userID: '<%= req.session.steamid %>'
        }))
    })
</script>